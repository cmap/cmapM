#!/bin/bash

SCORE=/cmap/data/build/a2y13q1/score_trans_small_bing.bin
RANK=/cmap/data/build/a2y13q1/rank_trans_small_bing.bin
SCORE2=/cmap/data/build/a2y13q1/score_trans_small_bing_copy.bin
RANK2=/cmap/data/build/a2y13q1/rank_trans_small_bing_copy.bin
GENELIST=/cmap/data/build/a2y13q1/gene_ids_bing.grp
SIGIDS=/cmap/data/build/a2y13q1/sigids.grp
UPTAG=/cmap/macchiato/fastquery_test/query_up_n10.gmt
DNTAG=/cmap/macchiato/fastquery_test/query_down_n10.gmt
OUT=out
OUTFILE=result.gct
CREATE_SUBDIR=false

ANNOT=''


while test $# -gt 0; do
	case "$1" in 
		-h|--help)
				printf "Usage fast_gutc.sh [options]\nOptions include:\n"
				printf -- "-s, --score \t Path to binary score matrix\n"
				printf -- "-r, --rank \t Path to binary rank matrix\n"
				printf -- "-g, --genelist \t Path to GRP file containing list of genes in BING spcae\n"
				printf -- "-i, --sigids \t PATH to GRP file containing IDs for signatures in score matrix\n"
				printf -- "-s2, --score2 \t Path to copy of binary score matrix, ideally stored on separate SSD for parallel loading.\n \t \t If not available, path to singular score matrix can be supplied to both\n"
				printf -- "-r2, --rank2 \t Path to copy of binary rank matrix for parallel loading\n"
				printf -- "-u, --uptag \t Path to GRP or GMT containing list(s) of query genes with expected up-regulation\n"
				printf -- "-d, --dntag \t Path to GRP or GMT containing lists(s) of query genes with expected down-regulation\n"
				printf -- "-o, --out \t Output folder \n"
				printf -- "-f, --outfile \t Query results filename. Ends with .gct \n"
				printf -- "-h, --help \t Print this help text\n"
				exit 0
				;;
		-s|--score)
				shift
				SCORE=$1
				shift
				;;
		-r|--rank)
				shift
				RANK=$1
				shift
				;;
		-g|--genelist)
				shift
				GENELIST=$1
				shift
				;;
		-i|--sigids)
				shift
				SIGIDS=$1
				shift
				;;
		-s2|--score2)
				shift
				SCORE2=$1
				shift
				;;
		-r2|--rank2)
				shift
				RANK2=$1
				shift
				;;
		-u|--uptag)
				shift
				UPTAG=$1
				shift
				;;
		-d|--dntag)
				shift
				DNTAG=$1
				shift
				;;
		-o|--out)
				shift
				OUT=$1
				shift
				;;
		-f|--outfile)
				shift
				OUTFILE=$1
				shift
				;;
#		-c|--create_subdir)
#				CREATE_SUBDIR=true
#				shift
#				;;
		-a|--annot)
				shift
				ANNOT=$1
				shift
				;;
		*) 
				printf "Unknown parameter: %s \n" "$1"
				exit -1
				;;
	esac
done

echo "!!!!!!!!!!!!!!!!!!RUNNING FASTGUTC SCRIPT!!!!!!!!!!!!!!!!!!!!!!!"


rum -q local -f sig_fastquery_tool --score $SCORE --rank $RANK --uptag $UPTAG --dntag $DNTAG --genelist $GENELIST --sigids $SIGIDS --out $OUT/sig_fastquery --outfile $OUTFILE --create_subdir $CREATE_SUBDIR

echo "!!!!!!!!!!!!!!!!!!FINISHED FASTQUERY SCRIPT!!!!!!!!!!!!!!!!!!!!!!!"

if [ -e $OUT/sig_fastquery/success.txt ]
	then
		echo "!!!!!!!!!!!!!!!!!!RUNNING GUTC PART SCRIPT!!!!!!!!!!!!!!!!!!!!!!!"
		rum -q local -f sig_gutc_tool --query_result $OUT/$OUTFILE --out $OUT --create_subdir $CREATE_SUBDIR
fi

#Annotate gctx and output as GCT for full query results
#rum sig_slice_tool --ds $OUT/matrices/query/*.gctx --use_gctx false

#upload results to s3 and sync

