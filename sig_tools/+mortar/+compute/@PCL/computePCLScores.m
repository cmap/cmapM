function rpt = computePCLScores(ds, pcl, pcl_info)

% Compute PCL scores for each column in ds 
    [id, nmember, cmedian, ciqr, cq25, cq75] = grpstats(ds.mat(pcl_info.pcl_idx, :),...
                                               pcl_info.pcl_id,...
                                               {'gname',...
                                               @(x) nnz(~isnan(x)),...
                                               @(x)nanmedian(x, 1) ...
                                               @(x)naniqr(x,1),...
                                               @(x)prctile(x,25,1),...
                                               @(x)prctile(x,75,1)});
                                           
    % fix singleton cases, simply halve the score for now
    is_singleton = abs(nmember-1)<eps;
    cmedian(is_singleton) = cmedian(is_singleton)*0.5;
    cq25(is_singleton) = cmedian(is_singleton)*0.5;
    cq75(is_singleton) = cmedian(is_singleton)*0.5;
     
    idx = str2double(id);
    hd = {pcl.head}';
    desc = {pcl.desc}';
    cid = hd(idx);
    chd = {'pcl_desc', 'pcl_size'};
    cdesc = [desc(idx), num2cell(pcl_info.pcl_sz(idx))];

    % compute max quartile
    q = cat(3, cq25, cq75);
    [~, maxi] = max(abs(q), [], 3);
    [ic, ir] = meshgrid(1:size(q, 2), 1:size(q, 1));
    qidx = sub2ind(size(q), ir, ic, maxi);
    maxq = q(qidx);

    % transpose matrices so dim = query x PCLs
    rpt = struct('cid', {cid},...
                 'chd', {chd},...
                 'cdesc', {cdesc},...
                 'rid', {ds.cid},...
                 'rhd', {ds.chd},...
                 'rdesc', {ds.cdesc},...
                 'median', cmedian',...
                 'nmember', nmember',...
                 'iqr', ciqr',...
                 'q25', cq25',...
                 'q75', cq75',...
                 'maxq', maxq');
             
end