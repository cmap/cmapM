function query_result = loadQueryResult(qres_folder, parse_files)
% read pre-computed query result(s) from folder
assert(mortar.util.File.isfile(qres_folder, 'dir'),...
    'Query result folder not found: %s', qres_folder); 
query_result = struct('args', '',...
                      'uptag', '',...
                      'dntag', '',...
                      'cs', '',...
                      'query_stats', '',...
                      'cs_up', '',...
                      'cs_dn', '',...
                      'leadf_up', '',...
                      'leadf_dn', '');
field_name = {'args',...
 'uptag',...
 'dntag',...
 'cs',...
 'query_stats'};
file_name={{'*_params.txt', @parse_param}...
        {'query_up*.gmt', 'path'}...
        {'query_dn*.gmt', 'path'}...
        {'result_*COMBINED*.gct*', @parse_gctx}...
        {'query_stats.txt', @parse_record}};
req_fields = {'cs', 'query_stats'};    
file_lut = mortar.containers.Dict(field_name, file_name);

k = file_lut.keys;
for ii=1:length(k)
    v = file_lut(k{ii});
    file_pat = v{1}{1};
    file_op = v{1}{2};
    target_file = fullfile(qres_folder, file_pat);
    [~, file_path] = find_file(target_file);
    if ~isempty(file_path)
        if parse_files && ~isequal(file_op, 'path')            
            query_result.(k{ii}) = feval(file_op, file_path{1});
        else
            query_result.(k{ii}) = file_path{1};
        end
    else
        mortar.util.Message.debug(1,...
            'Query result file: %s missing, skipping', target_file); 
    end
end

% query stats should be in the same order and contain all query_ids

query_stats_req_fields = {'query_id', 'query_desc', 'up_size'};

if parse_files
    [tf, has_req_fn] = has_required_fields(query_result.query_stats,...
                            query_stats_req_fields, true);
    assert(tf, 'Query stats does not have the required fields');
    [c, ia, ib] = intersect(query_result.cs.cid,...
                    {query_result.query_stats.query_id}',...
                    'stable');
    if ~isequal(numel(c), numel(query_result.cs.cid))
        d = setdiff(query_result.cs.cid, c);
        disp(d)
        error ('%d queries missing', numel(d));
    end
    query_result.query_stats = query_result.query_stats(ib);
end

end