function rpt = computeCISFromBuild(sig_info_file, modz_file)
% computeCISFromBuild Compute CIS values for PRISM build
% rpt = computeCISFromBuild(sig_info_file, modz_file)
sig_info = parse_record(sig_info_file);
req_fn = {'sig_id', 'cc_q75', 'nprofile'};
if ~(all(isfield(sig_info, req_fn)))
    disp(setdiff(req_fn, fieldnames(sig_info)));
    error('Required fields missing from sig info');
end
%% Read MODZ file for lm
modz = parse_gctx(modz_file);
%% Compute Adjusted zs
assert(isequal(modz.cid, {sig_info.sig_id}'), 'cid mismatch');
nrep = [sig_info.nprofile]';
adj_zs = mortar.compute.SigStrength.adjustZscore(modz.mat, nrep);
adj_modz = modz;
adj_modz.mat = adj_zs;
%% Compute SS_ngene from adj_modz
[~,~, ss_ltn1] = mortar.compute.SigStrength.ssNgene(adj_modz.mat, 'cutoff', 1);
[~,~, ss_ltn1p5] = mortar.compute.SigStrength.ssNgene(adj_modz.mat, 'cutoff', 1.5);
[~,~, ss_ltn2] = mortar.compute.SigStrength.ssNgene(adj_modz.mat, 'cutoff', 2);
[~,~, ss_ltn2p5] = mortar.compute.SigStrength.ssNgene(adj_modz.mat, 'cutoff', 2.5);
[~,~, ss_ltn3] = mortar.compute.SigStrength.ssNgene(adj_modz.mat, 'cutoff', 3);
%% Compute TAS
cc_q75 = [sig_info.cc_q75]';
% missing values
cc_q75(cc_q75<-1) = nan;
res_ltn1 =  mortar.compute.SigStrength.cis(ss_ltn1, cc_q75, 1, true);
res_ltn1p5 =  mortar.compute.SigStrength.cis(ss_ltn1p5, cc_q75, 1, true);
res_ltn2 =  mortar.compute.SigStrength.cis(ss_ltn2, cc_q75, 1, true);
res_ltn2p5 =  mortar.compute.SigStrength.cis(ss_ltn2p5, cc_q75, 1, true);
res_ltn3 =  mortar.compute.SigStrength.cis(ss_ltn3, cc_q75, 1, true);
rpt = setarrayfield(sig_info, [], {'ss_ltn1',...
                                   'ss_ltn1p5',...
                                   'ss_ltn2',...
                                   'ss_ltn2p5',...
                                   'ss_ltn3',...
                                   'cis_ltn1',...
                                   'cis_ltn1p5',...
                                   'cis_ltn2',...
                                   'cis_ltn2p5',...
                                   'cis_ltn3',...
                                   },...              
              ss_ltn1,...
              ss_ltn1p5,...
              ss_ltn2,...
              ss_ltn2p5,...
              ss_ltn3,...
              [res_ltn1.cis_gmean]',...
              [res_ltn1p5.cis_gmean]',...
              [res_ltn2.cis_gmean]',...
              [res_ltn2p5.cis_gmean]',...
              [res_ltn3.cis_gmean]');
end