function res = createDataset(pkstats, ds, row_meta_file, col_meta_file)

rid = gen_labels([pkstats(:,1).analyte],...
                'prefix', 'Analyte ','zeropad',false);
cid = {pkstats(1,:).src}';

row_meta = parse_record(row_meta_file);
col_meta = parse_record(col_meta_file);

[ds_combo, ds_high, ds_low] = annotateDataset(ds(1).mat,...
                                              ds(2).mat,...
                                              rid,...
                                              cid,...
                                              row_meta,...
                                              col_meta);

[support_combo, support_high, support_low] = annotateDataset(...
                                              ds(1).support,...
                                              ds(2).support,...
                                              rid,...
                                              cid,...
                                              row_meta,...
                                              col_meta);
[support_pct_combo, support_pct_high, support_pct_low] = annotateDataset(...
                                              ds(1).support_pct,...
                                              ds(2).support_pct,...
                                              rid,...
                                              cid,...
                                              row_meta,...
                                              col_meta);                                         
res = struct('ds', ds_combo,...
             'ds_high', ds_high,...
             'ds_low', ds_low,...
             'support', support_combo,...
             'support_high', support_high,...
             'support_low', support_low,...
             'support_pct', support_pct_combo,...
             'support_pct_high', support_pct_high,...
             'support_pct_low', support_pct_low,...
             'row_meta', row_meta,...
             'col_meta', col_meta);
         
end

function [ds_combo, ds_high, ds_low] = annotateDataset(ds_high_mat, ds_low_mat, rid, cid, row_meta, col_meta)
%% combine and add annotations
det_well = get_wellinfo(cid);
cid = regexprep(upper(cid), '\.LXB', '');
ds_high = mkgctstruct(ds_high_mat, 'rid', rid, 'cid', det_well);
ds_high = annotate_ds(ds_high, col_meta, 'dim', 'column');
ds_high.cid = cid;
ds_high = ds_add_meta(ds_high, 'column', 'det_well', det_well);

ds_low = mkgctstruct(ds_low_mat, 'rid', rid, 'cid', det_well);
ds_low = annotate_ds(ds_low, col_meta, 'dim', 'column');
ds_low.cid = cid;
ds_low = ds_add_meta(ds_low, 'column', 'det_well', det_well);

is_high = strcmp({row_meta.det_pool}', 'high');
feature_high = row_meta(is_high);
feature_low = row_meta(~is_high);
% duo_high
ds_high_filt = ds_slice(ds_high, 'rid', {feature_high.analyte_id}');
ds_high_filt = annotate_ds(ds_high_filt, feature_high, 'keyfield', 'analyte_id', 'dim', 'row');
rid_high = ds_get_meta(ds_high_filt, 'row', 'cell_id');
ds_high_filt.rid = rid_high;
ds_high_filt = ds_delete_meta(ds_high_filt, 'row', 'cell_id');

% duo_low + uni
ds_low_filt = ds_slice(ds_low, 'rid', {feature_low.analyte_id}');
ds_low_filt = annotate_ds(ds_low_filt, feature_low, 'keyfield', 'analyte_id', 'dim', 'row');
rid_low = ds_get_meta(ds_low_filt, 'row', 'cell_id');
ds_low_filt.rid = rid_low;
ds_low_filt = ds_delete_meta(ds_low_filt, 'row', 'cell_id');

ds_combo = merge_two(ds_high_filt, ds_low_filt);
end