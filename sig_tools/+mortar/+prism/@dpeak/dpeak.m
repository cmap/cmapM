classdef dpeak
    properties(Constant=true)
        detect_params = struct(...
            'notduo', '[11:100, 201:500]',...
            'low_exp', 4,...
            'high_exp', 16,...
            'pkmethod', 'kspeak',...
            'max_k', 4,...
            'min_bead', 20,...
            'min_peak_support', 10,...
            'min_peak_support_pct', 10,...
            'opt_support_pct_hi', 65,...
            'opt_support_pct_lo', 35,...
            'subtract_bg', 0,...
            'merge_close_peaks', 0 ...
            );         
    end
    
	methods(Static=true)

         % Dpeak and create datasets
         res = processPlate(lxb_path, out_path, row_meta_file, col_meta_file);
         % save dpeaked datasets
         saveDataset(res, out_path);
         % quantile normalize by cell line
         qnorm_ds = quantileNormalizeByCell(ds);

         % core routines
         pkstats = dpeakSingleAnalyte(x, varargin);
         pkstats = dpeakMultiAnalyte(rp1, rid, varargin);
         [pkstats, fn] = dpeakFolder(lxb_path, varargin);
         ds = assignPeaks(pkstats, varargin);
         res = createDataset(pkstats, ds, row_meta_file, col_meta_file);
         zs = zscoreDataset(ds);
         ssmd_rpt = computeSSMD(ds);
         plotSSMD(rpt, varargin);
         % scratch code
         pkstats = adhocTest;
	end
end

