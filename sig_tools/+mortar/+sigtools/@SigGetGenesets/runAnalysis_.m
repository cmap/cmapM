function runAnalysis_(obj, varargin)
args = obj.getArgs;
obj.res_ = main(args);
end

function res = main(args)
res = struct('args', args, 'output', '');
    
    if isempty(args.rid) && ~strcmpi(args.row_space, 'custom')        
        rid = mortar.common.Spaces.probe(args.row_space).asCell;
    else
        rid = args.rid;
    end
    ds = parse_gctx(args.ds,...
        'cid', args.cid,...
        'rid', rid);

    [res.up, res.dn, ~] = get_genesets(ds, args.set_size, ...
        args.sort_order, ...
        '--es_tail', args.es_tail, ...
        '--id_field', args.id_field, ...
        '--desc_field', args.desc_field, ...
        '--suffix', args.suffix, ...
        '--dim', args.dim, ...
        '--enforce_set_size', args.enforce_set_size, ...
        '--min_set_size', args.min_set_size);

    res.nsets = numel(ds.cid);
end
